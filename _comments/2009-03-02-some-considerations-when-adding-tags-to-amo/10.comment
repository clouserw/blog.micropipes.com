post_id: /2009/03/02/some-considerations-when-adding-tags-to-amo
name: Staś Małolepszy
date: '2009-03-04 11:37:36 -0800'
comment: "Here's an idea I talked about in the call earlier today:\r\n\r\nWhen the
  users wants to tag an add-on, they are presented with a couple of text input fields,
  laid out vertically, where they can insert the tags, e.g. résumé. Next to each
  field, horizontally, there is a link saying \"add alternative ASCII-only spelling
  to help searches\". When the user clicks on it, it is replaced by another text
  input and a \"+\" sign allowing to add another additional text input field. In
  those fields, users can type the alternative spelling for their tag, \"resume\"
  in this example.\r\n\r\nThere are two things that can happen next:\r\n\r\n1.\r\n\r\nThe
  add-on is now tagged with two tags: \"résumé\" and \"resume\", but only \"résumé\"
  is a primary tag, meaning that only \"résumé\" is displayed in the add-on's tag
  cloud. \"Resume\" is an auxiliary tag, used only for searches.\r\n\r\nThe problem
  here is the inverse scenario: I believe it is rather unlikely that someone typing
  \"resume\" will think of the alternative spelling: \"résumé\". Hence the second
  solution:\r\n\r\n2.\r\n\r\nAs soon as the users provides two spelling versions
  of one tag, we can use them to create a two-way mapping. Whenever someone searches
  for \"résumé, their query will be first checked against the mapping returning
  \"resume\" and the search results can now include add-ons tagged with both spellings.
  This works the other way round too.\r\n\r\nSo in fact, instead of mapping Unicode
  letters onto ASCII letters, we're mapping words onto words (in both directions:
  unicode-&gt;ascii and ascii-&gt;unicode). And that's generated by users, so we
  have good chances of covering the most popular words first.\r\n\r\nThoughts?"

