post_id: /2009/02/23/how-addonsmozillaorg-defends-against-xss-attacks
name: Ian Thomas (thelem)
date: '2009-02-23 17:17:51 -0800'
comment: "Good post. I generally just use htmlspecialchars at the moment, but will
  consider adding a similar function to our codebase. \r\n\r\nI think its worth
  pointing out more clearly exactly where the sanitise function is run. Lots of
  developers know that they need to run strings through functions like this to be
  safe, but they don't really understand what they are doing so just run the strings
  through these functions wherever they see the string and remember to do it. That
  leads to some strings being sanitised multiple times, and others not to be sanitised
  at all.\r\n\r\nIt can be tempting just to sanitise everything on it's way in -
  once it is in your system it is trusted data (think PHP's Magic Quotes). But how
  do you sanitise it? SQL escaping? HTML escaping?\r\n\r\nI like to think of it
  as converting a string from it's original format, as supplied by the user, to
  a particular format for how I want to use it. If I want use the string in a PostgreSQL
  query, then I convert it to PostgreSQL by running it through pg_escape_string.
  If I want to use it on a web page, then I convert it to HTML by running it through
  htmlspecialchars (or Wil's sanitise function). In both cases the end user (querying
  the database or browsing the web) will see the string in its original format,
  but the intermediate language (PostgreSQL or HTML) will ignore any special characters."

