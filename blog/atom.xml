<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://micropipes.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://micropipes.com/" rel="alternate" type="text/html" /><updated>2024-05-08T15:13:20-07:00</updated><id>https://micropipes.com/feed.xml</id><title type="html">all night diner</title><author><name>Wil Clouser</name><email>clouserw@micropipes.com</email></author><entry><title type="html">I made a new hack poster</title><link href="https://micropipes.com/2024/05/03/I-made-a-new-hack-poster/" rel="alternate" type="text/html" title="I made a new hack poster" /><published>2024-05-03T00:00:00-07:00</published><updated>2024-05-03T00:00:00-07:00</updated><id>https://micropipes.com/2024/05/03/I-made-a-new-hack-poster</id><content type="html" xml:base="https://micropipes.com/2024/05/03/I-made-a-new-hack-poster/"><![CDATA[<p>I was feeling nostalgic a couple months ago and built a hack poster out of
plywood.  It’s mostly modeled after the original but I added the radio tower
and changed the words.  “This technology could fall into the right hands” still
makes me smile when I see it out in the world.</p>

<p><img src="/assets/img/2024-art-hack-poster-1.jpg" alt="Poster hanging on the wall" />
<img src="/assets/img/2024-art-hack-poster-2.jpg" alt="Close-up of radio tower" />
<img src="/assets/img/2024-art-hack-poster-3.jpg" alt="Close-up of lettering" /></p>]]></content><author><name>Wil Clouser</name></author><category term="art" /><category term="laser" /><category term="Mozilla" /><summary type="html"><![CDATA[I was feeling nostalgic a couple months ago and built a hack poster out of plywood. It’s mostly modeled after the original but I added the radio tower and changed the words. “This technology could fall into the right hands” still makes me smile when I see it out in the world.]]></summary></entry><entry><title type="html">A crude case for the W8BH morse tutor</title><link href="https://micropipes.com/2024/02/25/a-crude-case-for-the-w8bh-morse-tutor/" rel="alternate" type="text/html" title="A crude case for the W8BH morse tutor" /><published>2024-02-25T00:00:00-08:00</published><updated>2024-02-25T00:00:00-08:00</updated><id>https://micropipes.com/2024/02/25/a-crude-case-for-the-w8bh-morse-tutor</id><content type="html" xml:base="https://micropipes.com/2024/02/25/a-crude-case-for-the-w8bh-morse-tutor/"><![CDATA[<p>I looked everywhere for a case for <a href="http://w8bh.net">W8BH’s Morse Tutor project</a>[1].
The only one I found was a <a href="https://www.thingiverse.com/thing:4190589">3d printed one for the previous revision</a> with the smaller screen.</p>

<p>I have the ESP32 version with the 3.2” screen and to protect it and make it
easier to hold I made a crude case for it on a laser cutter.  If you’d like to
make one you’re welcome to <a href="/assets/img/2024-w8bh-case.svg">download the SVG</a>.</p>

<p><img src="/assets/img/2024-w8bh-case-3.jpg" alt="Photo of front of case" />
<img src="/assets/img/2024-w8bh-case-2.jpg" alt="Photo showing back of case" />
<img src="/assets/img/2024-w8bh-case-1.jpg" alt="Photo showing top of case where connectors are" /></p>

<p>[1] I can’t link to the project itself because it’s a series of PDFs but it’s
listed under the arduino projects menu.</p>

<p>Update March 2024: <a href="https://www.thingiverse.com/thing:5377530">Here is a 3D printed case which should fit</a></p>]]></content><author><name>Wil Clouser</name></author><category term="laser" /><category term="radio" /><category term="morse" /><summary type="html"><![CDATA[I looked everywhere for a case for W8BH’s Morse Tutor project[1]. The only one I found was a 3d printed one for the previous revision with the smaller screen.]]></summary></entry><entry><title type="html">Automatically transcribing digital radio</title><link href="https://micropipes.com/2024/02/07/automatically-transcribing-digital-radio/" rel="alternate" type="text/html" title="Automatically transcribing digital radio" /><published>2024-02-07T00:00:00-08:00</published><updated>2024-02-07T00:00:00-08:00</updated><id>https://micropipes.com/2024/02/07/automatically-transcribing-digital-radio</id><content type="html" xml:base="https://micropipes.com/2024/02/07/automatically-transcribing-digital-radio/"><![CDATA[<p>I’ve recently been using <a href="https://github.com/lwvmobile/dsd-fme">DSD FME</a> to
decode Silke Communication’s <a href="https://www.silkecom.com/fleetnet">FleetNet Network</a>
radio traffic around me.  After some configuration effort it’s working well,
but I realized one of the things I’ve really appreciated about the past decade
is the slow migration to asynchronous communications (email, messages, etc.)
instead of voice calls or in-person meetings that interrupt whatever I’m doing.
I don’t want to actually listen to the radio traffic, rather, I’d like to skim
it, preferably visually, after-the-fact to see if anything interesting
happened.</p>

<p>Maybe we can automatically transcribe it?</p>

<p>Historically, automatic transcription hasn’t been great, even in ideal
environments, let alone something as sketchy as a radio where calls can fade
and a good percentage of the words are jargon.  But this is 2024 and AI rules
the day, right?  Maybe things are better.</p>

<p>DSD FME can be configured to dump every call to a <code class="language-plaintext highlighter-rouge">.wav</code> file in a directory
which takes care of the source audio.</p>

<p>I wrote a <a href="https://github.com/clouserw/dsd-fme-transcribe">short python script</a>
which watches a directory for file handles closing (meaning, the call is over)
and sends the files through <a href="https://github.com/openai/whisper">OpenAI’s Whisper</a> library to convert it to text.
Running it while audio files are coming in provides a roughly real-time
transcription.  Example output from this evening while the local school buses
were dropping off students:</p>

<blockquote>
  <p>TG Bus Dispatch RID 8703: 237 to central.</p>

  <p>TG Bus Dispatch RID 8761: 2-3-7 standby just a moment. 2-3-2 go ahead.</p>

  <p>TG Bus Dispatch RID 8784: I just wanted to update you that I’m route complete. Thank you.</p>

  <p>TG Bus Dispatch RID 8761: Okay, 10-4. Thank you. Go ahead. Two, three, seven.</p>

  <p>TG Bus Dispatch RID 8761: 274 standby just a moment. I got one more route calling in here. 237, I’m ready for you. Go ahead 237.</p>

  <p>TG Bus Dispatch RID 8703: So it is closed and I have three stops down there. What do I do?</p>
</blockquote>

<p>The system works!  Is it accurate?</p>

<p>Ehh.  I’d say it’s about 75% accurate after watching it for a bit.  It gets
most of the messages but does trip up occasionally.  I’m using the <a href="https://github.com/openai/whisper?tab=readme-ov-file#available-models-and-languages">base model</a>
because my computer isn’t very fast but using a larger model may improve the
accuracy.  Even better would be to train a model on radio communications. One
similar example where they did tune their model is <a href="https://repository.tudelft.nl/islandora/object/uuid:8aa780bf-47b6-4f81-b112-29e23bc06a7d?collection=education">this thesis applying the technique</a>
to air traffic control radio.  They achieved a ~13% error rate with a pretty
challenging data set.</p>

<p>Is this revolutionary?</p>

<p>Not really.  There are <a href="https://github.com/openai/whisper/discussions/categories/show-and-tell">many examples</a>
of using Whisper to decode audio like this, even in real time.  I wrote this
because all the examples seem too complicated for someone just looking at the
library for the first time and it’s fun to start and finish a project in a
couple of hours!</p>]]></content><author><name>Wil Clouser</name></author><category term="software" /><category term="radio" /><summary type="html"><![CDATA[I’ve recently been using DSD FME to decode Silke Communication’s FleetNet Network radio traffic around me. After some configuration effort it’s working well, but I realized one of the things I’ve really appreciated about the past decade is the slow migration to asynchronous communications (email, messages, etc.) instead of voice calls or in-person meetings that interrupt whatever I’m doing. I don’t want to actually listen to the radio traffic, rather, I’d like to skim it, preferably visually, after-the-fact to see if anything interesting happened.]]></summary></entry><entry><title type="html">Setting up a Yaesu FTDX-3000 with FT8 on OS X</title><link href="https://micropipes.com/2023/07/10/setting-up-Yaesu-FTDX-3000-with-FT8-on-OS-X/" rel="alternate" type="text/html" title="Setting up a Yaesu FTDX-3000 with FT8 on OS X" /><published>2023-07-10T00:00:00-07:00</published><updated>2023-07-10T00:00:00-07:00</updated><id>https://micropipes.com/2023/07/10/setting-up-Yaesu-FTDX-3000-with-FT8-on-OS-X</id><content type="html" xml:base="https://micropipes.com/2023/07/10/setting-up-Yaesu-FTDX-3000-with-FT8-on-OS-X/"><![CDATA[<p>There are plenty of walkthroughs online about setting up FT8 on the DX-3000 with Windows but I didn’t find any for OS X.  So, here we are.  I’m using the USB interface.</p>

<p>Unfortunately you’ll need to install the <a href="https://www.silabs.com/developers/usb-to-uart-bridge-vcp-drivers?tab=downloads">CP210x USB to UART Bridge Virtual COM Port driver</a> manually.</p>

<p>With the radio plugged in, <em>turned on</em>, and the drivers installed try listing your USB devices:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  ~% ioreg -p IOUSB

  [...]

  | +-o IOUSBHostDevice@02100000  &lt;class IOUSBHostDevice, id 0x1000abb83, registered, matched, active, busy 0 (5243 ms), retain 30&gt;
  |   +-o CP2105 Dual USB to UART Bridge Controller@02110000  &lt;class IOUSBHostDevice, id 0x1000abb90, registered, matched, active, busy 0 (5218 ms), retain 28&gt;
  |   +-o USB Audio CODEC @02120000  &lt;class IOUSBHostDevice, id 0x1000abb9d, registered, matched, active, busy 0 (58 ms), retain 33&gt;

  [...]

</code></pre></div></div>

<p>The ones to look for here are the <code class="language-plaintext highlighter-rouge">CP2105 Dual USB to UART Bridge Controller</code> and the <code class="language-plaintext highlighter-rouge">USB
Audio CODEC</code>.  If they are listed your computer can see the radio.  If not, try
pressing <code class="language-plaintext highlighter-rouge">menu</code> on the radio and confirm that option <code class="language-plaintext highlighter-rouge">037 CAT SELECT</code> is set to
<code class="language-plaintext highlighter-rouge">USB</code>.</p>

<p>Most of the radio’s default options are fine, but there are a few to adjust:</p>

<ul>
  <li>Set option <code class="language-plaintext highlighter-rouge">038 CAT RATE</code> to <code class="language-plaintext highlighter-rouge">38400</code> (default <code class="language-plaintext highlighter-rouge">4800</code>).</li>
  <li>Set option <code class="language-plaintext highlighter-rouge">075 DATA IN SELECT</code> to <code class="language-plaintext highlighter-rouge">USB</code> (default <code class="language-plaintext highlighter-rouge">DATA</code>)</li>
  <li>Set option <code class="language-plaintext highlighter-rouge">077 DATA OUT LEVEL</code> to <code class="language-plaintext highlighter-rouge">1</code> (default <code class="language-plaintext highlighter-rouge">50</code>)</li>
  <li>Set option <code class="language-plaintext highlighter-rouge">103 SSB MIC SEL</code> to <code class="language-plaintext highlighter-rouge">USB</code> (default <code class="language-plaintext highlighter-rouge">FRONT</code>).  Tip: Program your <code class="language-plaintext highlighter-rouge">C.S</code> key for this option so it’s easy to switch back to the front microphone.</li>
</ul>

<p>When using the radio for FT8 I also set these options:</p>

<ul>
  <li>Set <code class="language-plaintext highlighter-rouge">IPO</code> to <code class="language-plaintext highlighter-rouge">IPO</code></li>
  <li>Set <code class="language-plaintext highlighter-rouge">ATT</code> to <code class="language-plaintext highlighter-rouge">OFF</code></li>
  <li>Set <code class="language-plaintext highlighter-rouge">PROC</code> to <code class="language-plaintext highlighter-rouge">OFF</code> (this option is behind the <code class="language-plaintext highlighter-rouge">SCOPE</code> button)</li>
  <li>Set <code class="language-plaintext highlighter-rouge">MIC EQ</code> to <code class="language-plaintext highlighter-rouge">OFF</code> (also behind the <code class="language-plaintext highlighter-rouge">SCOPE</code> button)</li>
</ul>

<p>On OS X you’ll need to install <a href="https://wsjt.sourceforge.io/wsjtx.html">WSJT-X</a>.  WSJT-X can control the radio directly so no need for any other software radios.  These are my settings:</p>

<p><img src="/assets/img/2023-wsjt-x-settings.png" alt="A screenshot of the radio tab of the WSJT-X settings window." /></p>

<p>I have two serial ports provided by the radio, one regular and one “enhanced” -
only the enhanced one works.</p>]]></content><author><name>Wil Clouser</name></author><category term="radio" /><category term="walkthrough" /><summary type="html"><![CDATA[There are plenty of walkthroughs online about setting up FT8 on the DX-3000 with Windows but I didn’t find any for OS X. So, here we are. I’m using the USB interface.]]></summary></entry><entry><title type="html">Retiring the Hera library</title><link href="https://micropipes.com/2023/04/06/retiring-hera/" rel="alternate" type="text/html" title="Retiring the Hera library" /><published>2023-04-06T00:00:00-07:00</published><updated>2023-04-06T00:00:00-07:00</updated><id>https://micropipes.com/2023/04/06/retiring-hera</id><content type="html" xml:base="https://micropipes.com/2023/04/06/retiring-hera/"><![CDATA[<p>Thirteen years ago I wrote <a href="/2010/03/23/libraries-to-connect-to-a-citrix-netscaler-or-zeus-traffic-manager/">a library called Hera</a> to make expiring content on Zeus Traffic Managers easier.  It was on PyPi
but never super popular and the maintainers of <a href="https://github.com/argoproj-labs/hera">Hera
Workflow</a> got in touch with
me about taking over the namespace.  I don’t use the library anymore so it was
easy to give up the name.  If you do need the library you can find it <a href="https://github.com/clouserw/hera">on
GitHub</a>.</p>]]></content><author><name>Wil Clouser</name></author><category term="Mozilla" /><category term="software" /><summary type="html"><![CDATA[Thirteen years ago I wrote a library called Hera to make expiring content on Zeus Traffic Managers easier. It was on PyPi but never super popular and the maintainers of Hera Workflow got in touch with me about taking over the namespace. I don’t use the library anymore so it was easy to give up the name. If you do need the library you can find it on GitHub.]]></summary></entry><entry><title type="html">Starting a dashboard for openHAB data</title><link href="https://micropipes.com/2018/12/05/starting-a-dashboard-for-openhab-data/" rel="alternate" type="text/html" title="Starting a dashboard for openHAB data" /><published>2018-12-05T00:00:00-08:00</published><updated>2018-12-05T00:00:00-08:00</updated><id>https://micropipes.com/2018/12/05/starting-a-dashboard-for-openhab-data</id><content type="html" xml:base="https://micropipes.com/2018/12/05/starting-a-dashboard-for-openhab-data/"><![CDATA[<p>In this post I’ll set up the software needed to store data from <a href="https://www.openhab.org/">openHAB</a>
and display it on a dashboard.  I’ll use a z-wave thermostat I have already set
up on my network, and I’ll add Grafana and InfluxDB.</p>

<p><img src="/assets/img/2018-dashboard-one.png" alt="24 hours of temperature data" /></p>

<h3 id="set-up-the-containers">Set up the containers</h3>

<p>Lately I’ve been trying to compartmentalize things, so I want to run Grafana and
InfluxDB in Docker.  There are <a href="https://github.com/philhawthorne/docker-influxdb-grafana">options</a> that run them all in the same container,
but I liked <a href="https://github.com/nicolargo/docker-influxdb-grafana">nicolargo/docker-influxdb-grafana</a> which is essentially just a
simple docker-compose file that uses base (read: maintained) images.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git checkout https://github.com/nicolargo/docker-influxdb-grafana.git
</code></pre></div></div>

<p>In <code class="language-plaintext highlighter-rouge">docker-compose.yml</code> there are two <code class="language-plaintext highlighter-rouge">volumes</code> keys that link out to the
disk.  I modified those paths, but otherwise didn’t make any changes.  By
setting up the volumes here, I’ll have persistent storage beyond restarts.</p>

<p>When I first tried to run the containers, the Grafana container failed with
permission problems.  Grafana <a href="http://docs.grafana.org/installation/docker/#migration-from-a-previous-version-of-the-docker-container-to-5-1-or-later">mentions some permissions changes in a different context</a>,
but following these steps fixed my issues also:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>docker run <span class="nt">-ti</span> <span class="nt">--user</span> root <span class="nt">--volume</span> <span class="s2">"/data/docker/grafana/data:/var/lib/grafana"</span> <span class="nt">--entrypoint</span> bash grafana/grafana:latest

<span class="c"># then within the container, run:</span>

<span class="nv">$ </span><span class="nb">chown</span> <span class="nt">-R</span> root:root /etc/grafana
<span class="nv">$ </span><span class="nb">chmod</span> <span class="nt">-R</span> a+r /etc/grafana
<span class="nv">$ </span><span class="nb">chown</span> <span class="nt">-R</span> grafana:grafana /var/lib/grafana
<span class="nv">$ </span><span class="nb">chown</span> <span class="nt">-R</span> grafana:grafana /usr/share/grafana
</code></pre></div></div>

<p>After that the containers fired right up:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>docker-compose up <span class="nt">-d</span>
</code></pre></div></div>

<h3 id="set-up-influxdb">Set up InfluxDB</h3>

<p>InfluxDB is running now, but I need to add the new user and database.  First I
opened a shell with <code class="language-plaintext highlighter-rouge">docker exec -it influxdb influx</code> and then made the
changes:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt; create database openhab
&gt; create user openhab with password "openhab"
&gt; grant all on openhab to openhab
</code></pre></div></div>

<h3 id="getting-data-into-influxdb">Getting data into InfluxDB</h3>

<p>As with the rest of this walkthrough, someone already did the hard parts, so I
really just need to install a plugin for openHAB.</p>

<ol>
  <li>Load the PaperUI in openHAB</li>
  <li>Click Add-ons in the left menu</li>
  <li>Click Persistence in the top menu</li>
  <li>Click Install next to InfluxDB Persistence</li>
</ol>

<p>Next I’ll SSH into the openHAB box and edit or create two configuration files.
Copies of mine are below.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># /etc/openhab2/services/influxdb.cfg

# This is the URL for influxdb.  Don't forget the port.
url=http://192.168.1.2:8086
user=openhab
password=openhab
db=openhab
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># /etc/openhab2/persistence/influxdb.persist

Strategies {
    everyMinute : "0 * * * * ?"
    everyHour   : "0 0 * * * ?"
    everyDay    : "0 0 0 * * ?"

    default = everyChange
}

Items {
    *   : strategy = everyChange, everyHour
}
</code></pre></div></div>

<p>I have an <code class="language-plaintext highlighter-rouge">*</code> in my Items declaration because I want to send everything to
InfluxDB.  That can be changed to specific Items or Groups to narrow down what
is sent if desired.</p>

<p>With those files in place, openHAB will send data to InfluxDB every time
something changes and every hour.  I had to restart openHAB for the changes to
take effect:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>systemctl restart openhab2
</code></pre></div></div>

<h3 id="make-sure-data-is-flowing">Make sure data is flowing</h3>

<p>Look at the logs for InfluxDB by running <code class="language-plaintext highlighter-rouge">docker-compose logs influxdb</code>.
openHAB should have sent a hello:</p>

<blockquote>
  <table>
    <tbody>
      <tr>
        <td>influxdb</td>
        <td>[httpd] 192.168.1.1 - - [02/Dec/2018:02:21:49 +0000] “GET /ping HTTP/1.1” 204 0 “-“ “okhttp/2.4.0”</td>
      </tr>
    </tbody>
  </table>
</blockquote>

<p>Depending on how much activity there is in openHAB there may be other entries in
the logs also.  To double check inside InfluxDB itself try this:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>docker <span class="nb">exec</span> <span class="nt">-it</span> influxdb influx

<span class="c"># And then inside the influxdb client</span>
<span class="o">&gt;</span> use openhab
<span class="o">&gt;</span> show measurements
</code></pre></div></div>

<p>A list of all the measurements sent so far will display.  <code class="language-plaintext highlighter-rouge">select * from
somekey</code> will dig into the data itself.</p>

<h3 id="set-up-grafana">Set up Grafana</h3>

<p>The Grafana interface is on port 3000 by default and the credentials are
admin/admin.  On first login Grafana shows a wizard interface, so this moves
along pretty quickly.  The new Data Source is the InfluxDB type, probably with
a URL of <code class="language-plaintext highlighter-rouge">http://influxdb:8086</code>.  Docker-compose does the DNS for free here.</p>

<p>I’ll put a Graph panel on a new dashboard and click the title of it to edit.
The metrics tab has the queries and since the data is already flowing in, the
correctly named Keys appear in a dropdown when I’m editing them.  The query can
stay mostly as defaults, here is what mine looks like:</p>

<p><img src="/assets/img/2018-dashboard-two.png" alt="Grafana congfiguration" /></p>

<p>My Key names (eg. <code class="language-plaintext highlighter-rouge">HVAC_Temperature</code>) come from how I set the device up in openHAB.</p>

<p>The only other thing to change here is in the Display tab: I set the Null Value
to <code class="language-plaintext highlighter-rouge">connected</code> so I’ll have a nicely drawn line chart even though the
Temperature only changes periodically.</p>

<h3 id="one-more-bit-of-fanciness">One more bit of fanciness</h3>

<p>I have a wood stove that I use in winter, but if it gets below a certain
temperature (depending on the time of day) I have my furnace kick on.  I wanted
to be able to see when my furnace was coming on, so I decided to make use of
Grafana’s Annotations capability (the red vertical lines in the top image).</p>

<p>From within the dashboard I clicked the Settings Gear in the header (not the
one on the left) and chose Annotations.  From there I made a new Annotation
with a custom query:</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="n">value</span> <span class="k">from</span> <span class="n">HVAC_Operating_State</span> <span class="k">WHERE</span> <span class="n">value</span><span class="o">=</span><span class="mi">1</span> <span class="k">AND</span> <span class="err">$</span><span class="n">timeFilter</span> <span class="k">ORDER</span> <span class="k">BY</span> <span class="nb">time</span> <span class="k">ASC</span> <span class="k">LIMIT</span> <span class="mi">10</span>
</code></pre></div></div>

<p>The <code class="language-plaintext highlighter-rouge">AND $timeFilter</code> is important.  As before, mine is named
<code class="language-plaintext highlighter-rouge">HVAC_Operating_State</code> because that’s what I named the Item in openHAB when I
set it up.</p>

<p>And that’s it.  Returning to the dashboard after 24 hours should show something
like the graph at the top of this post.</p>]]></content><author><name>Wil Clouser</name></author><category term="automation" /><category term="walkthrough" /><summary type="html"><![CDATA[In this post I’ll set up the software needed to store data from openHAB and display it on a dashboard. I’ll use a z-wave thermostat I have already set up on my network, and I’ll add Grafana and InfluxDB.]]></summary></entry><entry><title type="html">Trying Mozilla’s Things Gateway</title><link href="https://micropipes.com/2018/02/21/trying-mozillas-things-gateway/" rel="alternate" type="text/html" title="Trying Mozilla’s Things Gateway" /><published>2018-02-21T00:00:00-08:00</published><updated>2018-02-21T00:00:00-08:00</updated><id>https://micropipes.com/2018/02/21/trying-mozillas-things-gateway</id><content type="html" xml:base="https://micropipes.com/2018/02/21/trying-mozillas-things-gateway/"><![CDATA[<p><em>Spoiler: It doesn’t yet support my hardware and I didn’t get it working, but
I’m posting anyway because it’s ok to fail. :)</em></p>

<p>Last weekend I was inspired by <a href="http://www.twobraids.com/2018/02/lars-and-real-internet-of-things-part-1.html">Lars’s posts on IoT</a> to try <a href="https://iot.mozilla.org/gateway/">Mozilla’s Things
Gateway</a>.</p>

<p>I have an old Raspberry Pi 1 Model B with a <a href="https://razberry.z-wave.me/">RaZberry Z-Wave Daughterboard</a>
which I had soldered a larger external antenna on to last year.  I used to run
OpenHAB on it to control some z-wave devices before I moved last year and since
then it’s just been in a box.  Let’s fire it up!</p>

<p>This original Raspberry Pi is a single core 700mhz CPU, so I’m planning on
running it headless and doing everything remotely over SSH to save on GUI
resources.</p>

<p><img style="border:1px solid #aaa;" src="/assets/img/2018.raspberry.pi.1.jpg" /></p>

<p>Firstly, since I hadn’t plugged this in forever, I booted it up, uninstalled
OpenHAB and the RaZberry software and <a href="https://www.raspberrypi.org/blog/raspbian-stretch/">upgraded Raspbian to the latest
version</a>.  It’s still as
easy as it should be, just edit the sources.list and:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># apt-get update</span>
<span class="c"># apt-get dist-upgrade</span>
</code></pre></div></div>

<p>I left the upgrade running over night because it was taking so long – a
foreshadowing of things to come! 😩</p>

<p>On the suggestion of the page I linked to above, I removed <code class="language-plaintext highlighter-rouge">pulseaudio</code> since I
don’t use it.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># sudo apt-get purge "pulseaudio*"</span>
</code></pre></div></div>

<p><a href="https://github.com/mozilla-iot/gateway/blob/master/README.md">The instructions for installing the Gateway</a> are great and easy to follow.</p>

<p>I installed <code class="language-plaintext highlighter-rouge">nvm</code> as recommended, although so far I’m regretting it.  It takes
12 seconds to start a new login shell now while nvm executes the stuff it put
in <code class="language-plaintext highlighter-rouge">.bashrc</code>.  If I end up logging in very often I’ll get rid of it.</p>

<p>On the other hand, the Node world does do permissions well.  Most tools can
install in a users home directory without any root permissions, which I was
happy to do:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>curl <span class="nt">-o-</span> https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash
<span class="nv">$ </span>nvm <span class="nb">install</span> <span class="nt">--lts</span>
<span class="nv">$ </span>nvm use <span class="nt">--lts</span>
<span class="nv">$ </span>npm <span class="nt">--version</span>
5.6.0
<span class="nv">$ </span>node <span class="nt">--version</span>
v8.9.4
<span class="nv">$ </span>npm <span class="nb">install</span> <span class="nt">--global</span> yarn
</code></pre></div></div>

<p>Next up was OpenZWave.  Their documentation mentions supporting the Razberry
card, so I felt good about things working.  When you get to the <code class="language-plaintext highlighter-rouge">make</code> command,
go grab some lunch – this also took plenty of time.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git clone https://github.com/OpenZWave/open-zwave.git
<span class="nv">$ </span><span class="nb">cd </span>open-zwave
<span class="nv">$ </span>make <span class="o">&amp;&amp;</span> <span class="nb">sudo </span>make <span class="nb">install</span>
<span class="nv">$ </span><span class="nb">sudo </span>ldconfig
</code></pre></div></div>

<p>Finally, I’m ready to install the Things Gateway.  For a project that is still
new and moving quickly I like to install directly out of Git which makes
testing patches and upgrading to new versions easy (I hope!).</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git clone https://github.com/mozilla-iot/gateway.git
<span class="nv">$ </span><span class="nb">cd </span>gateway
<span class="nv">$ </span>yarn  <span class="c"># Yarn actually prints how long it takes to execute.  This took 6070.32 seconds! 💤</span>
</code></pre></div></div>

<p>I don’t want to use Mozilla’s tunneling service, so I faked some SSL:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">mkdir</span> <span class="nt">-p</span> ssl
<span class="nv">$ </span>openssl genrsa <span class="nt">-out</span> ssl/privatekey.pem 2048
<span class="nv">$ </span>openssl req <span class="nt">-new</span> <span class="nt">-sha256</span> <span class="nt">-key</span> ssl/privatekey.pem <span class="nt">-out</span> ssl/csr.pem
<span class="nv">$ </span>openssl x509 <span class="nt">-req</span> <span class="nt">-in</span> ssl/csr.pem <span class="nt">-signkey</span> ssl/privatekey.pem <span class="nt">-out</span> ssl/certificate.pem
</code></pre></div></div>

<p>And then start the web server.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>npm start  <span class="c"># This takes around 4 minutes to finish starting :(</span>
</code></pre></div></div>

<p>Loading the site in my browser works!   I click <code class="language-plaintext highlighter-rouge">settings</code> -&gt; <code class="language-plaintext highlighter-rouge">add-ons</code> and
install <code class="language-plaintext highlighter-rouge">z-wave device support</code>.  However, watching the console I can see it
fail to find the z-wave interface.</p>

<p>I dug around in the code and <a href="https://github.com/mozilla-iot/zwave-adapter/blob/master/zwave-adapter.js#L368">found the findZWavePort() code</a> that does the
detection, and confrimed that it’s looking at USB ports which won’t work for
the Razberry which comes in on <code class="language-plaintext highlighter-rouge">/dev/ttyAMA0</code>.</p>

<div class="aside">
<p>I'm just going to stick in a little aside here...</p>

<p>I modified the <code>zwave-adapter.js</code> file to add some logging and
make sure that was as far as it was getting and restarted the server (which,
took 4 minutes...) and then saw the module failed to load because the checksum
didn't match.  I deleted the checksum file (4 minutes...), and it failed again,
so I finally just removed the one line from the checksum file.</p>

<p>The checksum is a great idea and I assume there is some kind of flag I can pass
to the server to ignore it, but I haven't found it yet.</p>
</div>

<p>One last thing I wanted to verify before I dug too far into the Gateway was to
make sure OpenZWave was working.  They include a program with their code called
<code class="language-plaintext highlighter-rouge">MinOZW</code>.  I didn’t see documentation for it, but it takes the port to monitor
as it’s first parameter:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>MinOZW /dev/ttyAMA0
</code></pre></div></div>

<p>That command gave me a flood of Z-wave data, so I knew it was seeing the
controller properly.</p>

<p>Searching the open Mozilla IOT issues revealed that the request to <a href="https://github.com/mozilla-iot/zwave-adapter/issues/8">support the Razberry
board was filed a couple weeks ago</a>.  So, I CC’d myself to keep an eye on
it, and that’s as far as I got.  So far:</p>

<ul>
  <li>I have really high hopes for the Mozilla IoT Gateway</li>
  <li>A first generation Raspberry Pi might be too slow for these shenanigans 😞</li>
</ul>]]></content><author><name>Wil Clouser</name></author><category term="Mozilla" /><summary type="html"><![CDATA[Spoiler: It doesn’t yet support my hardware and I didn’t get it working, but I’m posting anyway because it’s ok to fail. :)]]></summary></entry><entry><title type="html">Some GMail filters to make sorting through Mozilla email easier</title><link href="https://micropipes.com/2017/07/07/some-gmail-filters-to-make-sorting-through-mozilla-mail-easier/" rel="alternate" type="text/html" title="Some GMail filters to make sorting through Mozilla email easier" /><published>2017-07-07T00:00:00-07:00</published><updated>2017-07-07T00:00:00-07:00</updated><id>https://micropipes.com/2017/07/07/some-gmail-filters-to-make-sorting-through-mozilla-mail-easier</id><content type="html" xml:base="https://micropipes.com/2017/07/07/some-gmail-filters-to-make-sorting-through-mozilla-mail-easier/"><![CDATA[<p>I use some GMail filters to help sort out the flood of emails I get from Mozilla
projects.  They help me identify bugs and issues I’ve been asked for
information on versus the mail I get from, for example, being an owner for our
GitHub organization.</p>

<p>I thought I blogged about this before but I couldn’t find the post, and maybe
Google’s new Inbox will make this irrelevant, but in the mean time:</p>

<p>I have some labels set up in Gmail:</p>

<p><img src="/assets/img/2017-email-list.png" title="Some labels in GMail" /></p>

<p>And some filters:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Matches: from:(bugzilla-daemon@mozilla.org) to:(wclouser@mozilla.com) ("X-Bugzilla-Reason: Reporter" OR "X-Bugzilla-Reason: CC")
Do this: Apply label "bug/cc"
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Matches: from:(bugzilla-daemon@mozilla.org) to:(wclouser@mozilla.com) "X-Bugzilla-Severity: blocker"
Do this: Apply label "bug/blocker"
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Matches: from:(bugzilla-daemon@mozilla.org) to:(wclouser@mozilla.com) "X-Bugzilla-Assigned-To: wclouser@mozilla.com"
Do this: Apply label "bug/mine"
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Matches: from:(bugzilla-daemon@mozilla.org) to:(wclouser@mozilla.com) "needinfo?wclouser"
Do this: Apply label "bug/mine"
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Matches: from:(notifications@github.com)
Do this: Skip Inbox, Apply label "github"
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Matches: from:(notifications@github.com) "You are receiving this because you are on a team that was mentioned."
Do this: Skip Inbox, Apply label "github/mine"
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Matches: from:(notifications@github.com) to:(wclouser@mozilla.com) "You are receiving this because you were mentioned."
Do this: Apply label "github/mine"
</code></pre></div></div>

<p>Then I just keep an eye on the labels where things are assigned to me and I can
mostly stay up with requests.  This system isn’t perfect – how do you handle
the mail? :)</p>]]></content><author><name>Wil Clouser</name></author><category term="Mozilla" /><summary type="html"><![CDATA[I use some GMail filters to help sort out the flood of emails I get from Mozilla projects. They help me identify bugs and issues I’ve been asked for information on versus the mail I get from, for example, being an owner for our GitHub organization.]]></summary></entry><entry><title type="html">Test Pilot Legacy Program Final Review</title><link href="https://micropipes.com/2016/10/27/test-pilot-legacy-program-review/" rel="alternate" type="text/html" title="Test Pilot Legacy Program Final Review" /><published>2016-10-27T02:55:00-07:00</published><updated>2016-10-27T02:55:00-07:00</updated><id>https://micropipes.com/2016/10/27/test-pilot-legacy-program-review</id><content type="html" xml:base="https://micropipes.com/2016/10/27/test-pilot-legacy-program-review/"><![CDATA[<p>One of my Q3 goals was to migrate the Legacy Test Pilot users into our new
Test Pilot program (<a href="http://micropipes.com/blog/2016/01/27/meet-the-new-test-pilot/">some background on the two programs</a>).  The previous
program was similar in that people could give feedback on experiments, but
different enough that we didn’t feel comfortable simply moving the users to the
new program without some kind of notification and opting-in.</p>

<p>We decided the best way to do that was simply push out a new version of the
legacy add-on which opened a new tab to the Test Pilot website and then
uninstalled itself.  This lets people interested in testing experiments know
about the new program without being overbearing.  Worst case scenario, they
close the tab and have one less add-on loading every time Firefox is started.</p>

<p>In our planning meeting it was suggested that getting three percent of users
from the old program to the new would be a reasonable compromise between
realistic and optimistic.  I guffawed, suggested that the audience had <em>already
opted-in once</em>, and put 6% in as our goal and figured it would be way higher.
Spoiler alert: I was wrong.</p>

<p>I’ll spare you the pain of writing the add-on (most of the trouble was that the
legacy add-on was so old you had to restart Firefox to uninstall it which really
broke up the flow).  On August 24th, we <a href="http://micropipes.com/blog/2016/08/24/time-to-upgrade-from-test-pilot-to-test-pilot/">pushed the update to the old program</a>.</p>

<p><img src="/assets/img/2016-testpilot-adu.png" title="Graph of daily usage" /></p>

<p>In the daily usage graph, you can see we successfully uninstalled ourselves from
several hundred thousand profiles, but we still have a long tail that doesn’t
seem to be uninstalling.  Fortunately, AMO has really great statistics
dashboards (<a href="https://addons.mozilla.org/en-US/firefox/addon/test-pilot/statistics/">these stats are public, by the way</a>) and we can dig a little
deeper.  So, as of today there are around 150k profiles with the old add-on
still installed.  About half of those are reporting running the latest version
(the one that uninstalls itself) and about half are disabled by the user.  I
suspect those halves overlap and account for 75k of the installed profiles.</p>

<p>The second 75k profiles are on older add-on versions and are not upgrading to a
new version.  There could be many reasons when we’re dealing with profiles this
old: they could be broken, they might not have write permissions to their
profile, their network traffic could be being blocked, an internet security
suite could be misbehaving, etc.  I don’t think there is much more we can do
for these folks right now, unfortunately.</p>

<p>Let’s talk about the overall goal though - how many people joined the new
program as a result of the new tab?</p>

<p><img src="/assets/img/2016-testpilot-conversions.png" title="Graph of conversions" /></p>

<p>As of the end of Q3, we had just over 26k conversions making for a <em>3.6%
conversion rate</em>.  Quite close to what was suggested in the original meeting by
the people who do this stuff for a living, and quite short of my brash guess.</p>

<p>Overall we got a 0.6 score on the <a href="https://wiki.mozilla.org/Test_Pilot/2016Q3">quarterly OKR</a>.</p>

<hr />

<p>Since I’m writing this post a few weeks after the end of Q3, I can see that
we’re continuing to get about 80 new users per day from the add-on prompt.
Overall that makes for about 28.5k total conversions as of Oct 27th.</p>]]></content><author><name>Wil Clouser</name></author><category term="Mozilla" /><summary type="html"><![CDATA[One of my Q3 goals was to migrate the Legacy Test Pilot users into our new Test Pilot program (some background on the two programs). The previous program was similar in that people could give feedback on experiments, but different enough that we didn’t feel comfortable simply moving the users to the new program without some kind of notification and opting-in.]]></summary></entry><entry><title type="html">Test Pilot 2016 Q4 OKRs</title><link href="https://micropipes.com/2016/10/14/test-pilot-2016-q4-okrs/" rel="alternate" type="text/html" title="Test Pilot 2016 Q4 OKRs" /><published>2016-10-14T00:00:00-07:00</published><updated>2016-10-14T00:00:00-07:00</updated><id>https://micropipes.com/2016/10/14/test-pilot-2016-q4-okrs</id><content type="html" xml:base="https://micropipes.com/2016/10/14/test-pilot-2016-q4-okrs/"><![CDATA[<p>The Test Pilot <a href="https://wiki.mozilla.org/Test_Pilot/2016Q4">2016 Q4 OKRs are published</a>.  Primarily we’ll be focused on
continued growth of users (our overall 2016 goal).  We deprioritized
localization last quarter and over-rotated on publishing experiments by
launching four when we were only aiming for one.  This quarter we’ll turn that
knob back down (we’re aiming for two new experiments) and get localization done.</p>

<p>We also failed to graduate any experiments last quarter – arguably the most
important part of our entire process since it includes drawing conclusions and
publishing our results.  This quarter we’ll graduate three experiments from Test
Pilot, publish our findings so we can improve Firefox, and clear out space in
Test Pilot for the next big ideas.</p>]]></content><author><name>Wil Clouser</name></author><category term="Mozilla" /><summary type="html"><![CDATA[The Test Pilot 2016 Q4 OKRs are published. Primarily we’ll be focused on continued growth of users (our overall 2016 goal). We deprioritized localization last quarter and over-rotated on publishing experiments by launching four when we were only aiming for one. This quarter we’ll turn that knob back down (we’re aiming for two new experiments) and get localization done.]]></summary></entry></feed>