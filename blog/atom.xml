<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://micropipes.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://micropipes.com/" rel="alternate" type="text/html" /><updated>2024-10-02T08:16:00-07:00</updated><id>https://micropipes.com/feed.xml</id><title type="html">all night diner</title><author><name>Wil Clouser</name><email>clouserw@micropipes.com</email></author><entry><title type="html">PyFxA 0.7.9 Released</title><link href="https://micropipes.com/2024/09/30/pyfxa-0.7.9-released/" rel="alternate" type="text/html" title="PyFxA 0.7.9 Released" /><published>2024-09-30T00:00:00-07:00</published><updated>2024-09-30T00:00:00-07:00</updated><id>https://micropipes.com/2024/09/30/pyfxa-0.7.9-released</id><content type="html" xml:base="https://micropipes.com/2024/09/30/pyfxa-0.7.9-released/"><![CDATA[<p>We released <a href="https://github.com/mozilla/PyFxA/releases/tag/0.7.9">PyFxA 0.7.9</a> last week (<a href="https://pypi.org/project/pyfxa/">pypi</a>).  This added:</p>

<ul>
  <li>Support for key stretching v2.  See the end of <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1320222">bug
1320222</a> for some
details.  V1 will continue to work, but we’ll remove support for it at some
point in the future.</li>
  <li>Upgraded to support (and test!) Python 3</li>
</ul>

<p>Special thanks to <a href="https://rob.cogit8.org/">Rob Hudson</a> and <a href="https://github.com/dschom">Dan Schomburg</a> for thier efforts.</p>]]></content><author><name>Wil Clouser</name></author><category term="Mozilla" /><category term="software" /><summary type="html"><![CDATA[We released PyFxA 0.7.9 last week (pypi). This added:]]></summary></entry><entry><title type="html">Using Borg on TrueNAS</title><link href="https://micropipes.com/2024/06/18/using-borg-on-truenas/" rel="alternate" type="text/html" title="Using Borg on TrueNAS" /><published>2024-06-18T00:00:00-07:00</published><updated>2024-06-18T00:00:00-07:00</updated><id>https://micropipes.com/2024/06/18/using-borg-on-truenas</id><content type="html" xml:base="https://micropipes.com/2024/06/18/using-borg-on-truenas/"><![CDATA[<p>I installed TrueNAS a couple months ago to try out ZFS.  It has some simple
backup options built-in but I didn’t see any encrypted options.  Since I use
<a href="https://www.borgbackup.org/">Borg</a> elsewhere I thought this was a good
opportunity to figure out how to put it on TrueNAS. TrueNAS is based on Debian,
but relying on direct package installations isn’t recommended so I needed
another option.</p>

<p>I was going to use <a href="https://truecharts.org/charts/stable/borg-server/">TrueCharts’ borg chart</a> but TrueNAS SCALE is
<a href="https://forums.truenas.com/t/the-future-of-electric-eel-and-apps/5409/7">phasing out support for charts completely</a>
so I opted to install a binary manually and see if a standard approach appears
later.  It turned out to be pretty straight forward, steps below:</p>

<ol>
  <li>Download a <a href="https://github.com/borgbackup/borg/releases">borg binary</a>.
You’ll want to use a version of the unfortunately-named <code class="language-plaintext highlighter-rouge">borg-linuxnewer64</code>
builds which are built for Debian 12.  I used the latest stable version,
<code class="language-plaintext highlighter-rouge">1.2.8</code>.</li>
  <li>Copy the binary somewhere.  I put it in <code class="language-plaintext highlighter-rouge">/mnt/bin/</code>.</li>
  <li>Try to run <code class="language-plaintext highlighter-rouge">/mnt/bin/borg -V</code>.  If you get an error saying
<code class="language-plaintext highlighter-rouge">/mnt/bin/borg: error while loading shared libraries: libz.so.1: failed to
map segment from shared object</code> you need to add a temp directory it can
write to.  I made <code class="language-plaintext highlighter-rouge">/mnt/tmp</code> and then ran <code class="language-plaintext highlighter-rouge">export TMPDIR="/mnt/tmp"</code>.</li>
</ol>

<p>Now <code class="language-plaintext highlighter-rouge">/mnt/bin/borg -V</code> should work and you can add it to whatever scripts you
use to backup your system.  Don’t forget to set the TMPDIR in your scripts too.</p>]]></content><author><name>Wil Clouser</name></author><category term="software" /><category term="walkthrough" /><summary type="html"><![CDATA[I installed TrueNAS a couple months ago to try out ZFS. It has some simple backup options built-in but I didn’t see any encrypted options. Since I use Borg elsewhere I thought this was a good opportunity to figure out how to put it on TrueNAS. TrueNAS is based on Debian, but relying on direct package installations isn’t recommended so I needed another option.]]></summary></entry><entry><title type="html">Nyan Cat</title><link href="https://micropipes.com/2024/06/09/nyan-cat/" rel="alternate" type="text/html" title="Nyan Cat" /><published>2024-06-09T00:00:00-07:00</published><updated>2024-06-09T00:00:00-07:00</updated><id>https://micropipes.com/2024/06/09/nyan-cat</id><content type="html" xml:base="https://micropipes.com/2024/06/09/nyan-cat/"><![CDATA[<p><img src="/assets/img/2024-art-nyan-cat-1.jpg" alt="Nyan Cat hanging on the wall" /></p>

<p>Nyan Cat!  A classic internet meme.  I made this to put over a window.  About
30” long and 6” tall.</p>

<p><img src="/assets/img/2024-art-nyan-cat-2.jpg" alt="Nyan Cat under construction on a table" /></p>]]></content><author><name>Wil Clouser</name></author><category term="art" /><category term="laser" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Mario and Link</title><link href="https://micropipes.com/2024/05/31/mario-and-link/" rel="alternate" type="text/html" title="Mario and Link" /><published>2024-05-31T00:00:00-07:00</published><updated>2024-05-31T00:00:00-07:00</updated><id>https://micropipes.com/2024/05/31/mario-and-link</id><content type="html" xml:base="https://micropipes.com/2024/05/31/mario-and-link/"><![CDATA[<p>All of these are cut with a laser and painted with acrylics.</p>

<p><img src="/assets/img/2024-art-small-mario.jpg" alt="Mario hanging on the wall" /></p>

<p>A small Mario for me and a couple of Links to give away to friends.  All about
6” tall because that’s the size scrap I have.</p>

<p><img src="/assets/img/2024-art-small-link.jpg" alt="Two Links on a table" /></p>]]></content><author><name>Wil Clouser</name></author><category term="art" /><category term="laser" /><summary type="html"><![CDATA[All of these are cut with a laser and painted with acrylics.]]></summary></entry><entry><title type="html">Retiring BrowserID on Mozilla Accounts</title><link href="https://micropipes.com/2024/05/19/retiring-browserid-on-mozilla-accounts/" rel="alternate" type="text/html" title="Retiring BrowserID on Mozilla Accounts" /><published>2024-05-19T00:00:00-07:00</published><updated>2024-05-19T00:00:00-07:00</updated><id>https://micropipes.com/2024/05/19/retiring-browserid-on-mozilla-accounts</id><content type="html" xml:base="https://micropipes.com/2024/05/19/retiring-browserid-on-mozilla-accounts/"><![CDATA[<p>The <abbr title="too long; didn't read">tl;dr</abbr> here is that Mozilla
Accounts is turning off SyncStorage BrowserID support and it probably doesn’t
affect you at all.</p>

<h2 id="a-little-history">A little history</h2>

<p>In 2011, when Mozilla Accounts (called “Firefox Accounts” back then) was first
built it used BrowserID identity certificates in its authentication model.  The
BrowserID protocol never took off and Mozilla’s work on it ended in 2016.
However, the sync service in Firefox continued to use BrowserID even as OAuth
support was added to Mozilla Accounts as an alternative for all other relying
parties.</p>

<p>Over time, we recognized BrowserID was becoming a maintenance liability.  As a
non-standard protocol it created significant complexity in our codebase.
Therefore, we decided to migrate the Firefox clients off of it in favor of
OAuth.</p>

<p>This was an enormous effort, and while much more could be written about this
transition, the main takeaway is that Firefox Sync’s BrowserID support ended
with Firefox 78, which shipped in June 2020 and reached its end of life in
November 2021.</p>

<h2 id="present-day">Present day</h2>

<p>We’ve been waiting a long time for the usage of Firefox 78 to drop.</p>

<p>Aside from being an <abbr title="Extended Support Release">ESR</abbr> version
there are a couple of other reasons for its extra longevity:</p>

<ul>
  <li>It was the last version of the browser to support Flash</li>
  <li>It was the last version of the browser to support OS X versions &lt; 10.12</li>
</ul>

<p>With Flash now largely obsolete on the web and traffic from older operating
systems becoming rarer, we’ve decided that now is the appropriate time to turn
off support for this legacy protocol.</p>

<p>To avoid surprises and not leave anyone behind, we attempted to email anyone
still using that endpoint earlier this year. We didn’t receive any feedback and
we continued with the plan.</p>

<h2 id="our-method">Our method</h2>

<p>Our plan is simple:  BrowserID requests are the only traffic hitting our
<code class="language-plaintext highlighter-rouge">/v1/certificate/sign</code> endpoint.  We’ll begin returning <code class="language-plaintext highlighter-rouge">HTTP 404</code> replies to a
small percentage of traffic from that endpoint and monitor for any issues.
Our testing showed no concerns but it’s challenging to be comprehensive with so
many combinations of browser versions and operating systems.  Over the next few
weeks we’ll continue to ramp up the percentage of 404s until we can remove the
endpoint completely and let the traffic bounce off the front-end like any other
404.</p>

<h2 id="current-status">Current status</h2>

<p>Surprise!  I’m a few weeks late with this post.  We started returning 404s on
May 1 and are currently up to ~66% of traffic on that endpoint.  So far there
haven’t been any unexpected complications.  We’ll continue to increase over the
next few weeks and aim to have all the code removed this summer.</p>]]></content><author><name>Wil Clouser</name></author><category term="Mozilla" /><category term="software" /><summary type="html"><![CDATA[The tl;dr here is that Mozilla Accounts is turning off SyncStorage BrowserID support and it probably doesn’t affect you at all.]]></summary></entry><entry><title type="html">OBEY PROPAGANDA ENGINEERING</title><link href="https://micropipes.com/2024/05/10/obey-propaganda-engineering/" rel="alternate" type="text/html" title="OBEY PROPAGANDA ENGINEERING" /><published>2024-05-10T00:00:00-07:00</published><updated>2024-05-10T00:00:00-07:00</updated><id>https://micropipes.com/2024/05/10/obey-propaganda-engineering</id><content type="html" xml:base="https://micropipes.com/2024/05/10/obey-propaganda-engineering/"><![CDATA[<p><img src="/assets/img/2024-art-obey-propaganda-1.jpg" alt="Sign hanging on the wall" /></p>

<p>A sticker included in an order from <a href="https://obeygiant.com/">Obey Giant</a> turned
into a wall hanging.  Approx 6”x19” because that was the biggest piece of plywood I had.</p>

<p><img src="/assets/img/2024-art-obey-propaganda-2.jpg" alt="Sign being assembled" /></p>]]></content><author><name>Wil Clouser</name></author><category term="art" /><category term="laser" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">I made a new hack poster</title><link href="https://micropipes.com/2024/05/03/I-made-a-new-hack-poster/" rel="alternate" type="text/html" title="I made a new hack poster" /><published>2024-05-03T00:00:00-07:00</published><updated>2024-05-03T00:00:00-07:00</updated><id>https://micropipes.com/2024/05/03/I-made-a-new-hack-poster</id><content type="html" xml:base="https://micropipes.com/2024/05/03/I-made-a-new-hack-poster/"><![CDATA[<p>I was feeling nostalgic a couple months ago and built a hack poster out of
plywood.  It’s mostly modeled after the original but I added the radio tower
and changed the words.  “This technology could fall into the right hands” still
makes me smile when I see it out in the world.</p>

<p><img src="/assets/img/2024-art-hack-poster-1.jpg" alt="Poster hanging on the wall" />
<img src="/assets/img/2024-art-hack-poster-2.jpg" alt="Close-up of radio tower" />
<img src="/assets/img/2024-art-hack-poster-3.jpg" alt="Close-up of lettering" /></p>]]></content><author><name>Wil Clouser</name></author><category term="art" /><category term="laser" /><category term="Mozilla" /><summary type="html"><![CDATA[I was feeling nostalgic a couple months ago and built a hack poster out of plywood. It’s mostly modeled after the original but I added the radio tower and changed the words. “This technology could fall into the right hands” still makes me smile when I see it out in the world.]]></summary></entry><entry><title type="html">A crude case for the W8BH morse tutor</title><link href="https://micropipes.com/2024/02/25/a-crude-case-for-the-w8bh-morse-tutor/" rel="alternate" type="text/html" title="A crude case for the W8BH morse tutor" /><published>2024-02-25T00:00:00-08:00</published><updated>2024-02-25T00:00:00-08:00</updated><id>https://micropipes.com/2024/02/25/a-crude-case-for-the-w8bh-morse-tutor</id><content type="html" xml:base="https://micropipes.com/2024/02/25/a-crude-case-for-the-w8bh-morse-tutor/"><![CDATA[<p>I looked everywhere for a case for <a href="http://w8bh.net">W8BH’s Morse Tutor project</a>[1].
The only one I found was a <a href="https://www.thingiverse.com/thing:4190589">3d printed one for the previous revision</a> with the smaller screen.</p>

<p>I have the ESP32 version with the 3.2” screen and to protect it and make it
easier to hold I made a crude case for it on a laser cutter.  If you’d like to
make one you’re welcome to <a href="/assets/img/2024-w8bh-case.svg">download the SVG</a>.</p>

<p><img src="/assets/img/2024-w8bh-case-3.jpg" alt="Photo of front of case" />
<img src="/assets/img/2024-w8bh-case-2.jpg" alt="Photo showing back of case" />
<img src="/assets/img/2024-w8bh-case-1.jpg" alt="Photo showing top of case where connectors are" /></p>

<p>[1] I can’t link to the project itself because it’s a series of PDFs but it’s
listed under the arduino projects menu.</p>

<p>Update March 2024: <a href="https://www.thingiverse.com/thing:5377530">Here is a 3D printed case which should fit</a></p>]]></content><author><name>Wil Clouser</name></author><category term="laser" /><category term="radio" /><category term="morse" /><summary type="html"><![CDATA[I looked everywhere for a case for W8BH’s Morse Tutor project[1]. The only one I found was a 3d printed one for the previous revision with the smaller screen.]]></summary></entry><entry><title type="html">Automatically transcribing digital radio</title><link href="https://micropipes.com/2024/02/07/automatically-transcribing-digital-radio/" rel="alternate" type="text/html" title="Automatically transcribing digital radio" /><published>2024-02-07T00:00:00-08:00</published><updated>2024-02-07T00:00:00-08:00</updated><id>https://micropipes.com/2024/02/07/automatically-transcribing-digital-radio</id><content type="html" xml:base="https://micropipes.com/2024/02/07/automatically-transcribing-digital-radio/"><![CDATA[<p>I’ve recently been using <a href="https://github.com/lwvmobile/dsd-fme">DSD FME</a> to
decode Silke Communication’s <a href="https://www.silkecom.com/fleetnet">FleetNet Network</a>
radio traffic around me.  After some configuration effort it’s working well,
but I realized one of the things I’ve really appreciated about the past decade
is the slow migration to asynchronous communications (email, messages, etc.)
instead of voice calls or in-person meetings that interrupt whatever I’m doing.
I don’t want to actually listen to the radio traffic, rather, I’d like to skim
it, preferably visually, after-the-fact to see if anything interesting
happened.</p>

<p>Maybe we can automatically transcribe it?</p>

<p>Historically, automatic transcription hasn’t been great, even in ideal
environments, let alone something as sketchy as a radio where calls can fade
and a good percentage of the words are jargon.  But this is 2024 and AI rules
the day, right?  Maybe things are better.</p>

<p>DSD FME can be configured to dump every call to a <code class="language-plaintext highlighter-rouge">.wav</code> file in a directory
which takes care of the source audio.</p>

<p>I wrote a <a href="https://github.com/clouserw/dsd-fme-transcribe">short python script</a>
which watches a directory for file handles closing (meaning, the call is over)
and sends the files through <a href="https://github.com/openai/whisper">OpenAI’s Whisper</a> library to convert it to text.
Running it while audio files are coming in provides a roughly real-time
transcription.  Example output from this evening while the local school buses
were dropping off students:</p>

<blockquote>
  <p>TG Bus Dispatch RID 8703: 237 to central.</p>

  <p>TG Bus Dispatch RID 8761: 2-3-7 standby just a moment. 2-3-2 go ahead.</p>

  <p>TG Bus Dispatch RID 8784: I just wanted to update you that I’m route complete. Thank you.</p>

  <p>TG Bus Dispatch RID 8761: Okay, 10-4. Thank you. Go ahead. Two, three, seven.</p>

  <p>TG Bus Dispatch RID 8761: 274 standby just a moment. I got one more route calling in here. 237, I’m ready for you. Go ahead 237.</p>

  <p>TG Bus Dispatch RID 8703: So it is closed and I have three stops down there. What do I do?</p>
</blockquote>

<p>The system works!  Is it accurate?</p>

<p>Ehh.  I’d say it’s about 75% accurate after watching it for a bit.  It gets
most of the messages but does trip up occasionally.  I’m using the <a href="https://github.com/openai/whisper?tab=readme-ov-file#available-models-and-languages">base model</a>
because my computer isn’t very fast but using a larger model may improve the
accuracy.  Even better would be to train a model on radio communications. One
similar example where they did tune their model is <a href="https://repository.tudelft.nl/islandora/object/uuid:8aa780bf-47b6-4f81-b112-29e23bc06a7d?collection=education">this thesis applying the technique</a>
to air traffic control radio.  They achieved a ~13% error rate with a pretty
challenging data set.</p>

<p>Is this revolutionary?</p>

<p>Not really.  There are <a href="https://github.com/openai/whisper/discussions/categories/show-and-tell">many examples</a>
of using Whisper to decode audio like this, even in real time.  I wrote this
because all the examples seem too complicated for someone just looking at the
library for the first time and it’s fun to start and finish a project in a
couple of hours!</p>]]></content><author><name>Wil Clouser</name></author><category term="software" /><category term="radio" /><summary type="html"><![CDATA[I’ve recently been using DSD FME to decode Silke Communication’s FleetNet Network radio traffic around me. After some configuration effort it’s working well, but I realized one of the things I’ve really appreciated about the past decade is the slow migration to asynchronous communications (email, messages, etc.) instead of voice calls or in-person meetings that interrupt whatever I’m doing. I don’t want to actually listen to the radio traffic, rather, I’d like to skim it, preferably visually, after-the-fact to see if anything interesting happened.]]></summary></entry><entry><title type="html">Setting up a Yaesu FTDX-3000 with FT8 on OS X</title><link href="https://micropipes.com/2023/07/10/setting-up-Yaesu-FTDX-3000-with-FT8-on-OS-X/" rel="alternate" type="text/html" title="Setting up a Yaesu FTDX-3000 with FT8 on OS X" /><published>2023-07-10T00:00:00-07:00</published><updated>2023-07-10T00:00:00-07:00</updated><id>https://micropipes.com/2023/07/10/setting-up-Yaesu-FTDX-3000-with-FT8-on-OS-X</id><content type="html" xml:base="https://micropipes.com/2023/07/10/setting-up-Yaesu-FTDX-3000-with-FT8-on-OS-X/"><![CDATA[<p>There are plenty of walkthroughs online about setting up FT8 on the DX-3000 with Windows but I didn’t find any for OS X.  So, here we are.  I’m using the USB interface.</p>

<p>Unfortunately you’ll need to install the <a href="https://www.silabs.com/developers/usb-to-uart-bridge-vcp-drivers?tab=downloads">CP210x USB to UART Bridge Virtual COM Port driver</a> manually.</p>

<p>With the radio plugged in, <em>turned on</em>, and the drivers installed try listing your USB devices:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  ~% ioreg -p IOUSB

  [...]

  | +-o IOUSBHostDevice@02100000  &lt;class IOUSBHostDevice, id 0x1000abb83, registered, matched, active, busy 0 (5243 ms), retain 30&gt;
  |   +-o CP2105 Dual USB to UART Bridge Controller@02110000  &lt;class IOUSBHostDevice, id 0x1000abb90, registered, matched, active, busy 0 (5218 ms), retain 28&gt;
  |   +-o USB Audio CODEC @02120000  &lt;class IOUSBHostDevice, id 0x1000abb9d, registered, matched, active, busy 0 (58 ms), retain 33&gt;

  [...]

</code></pre></div></div>

<p>The ones to look for here are the <code class="language-plaintext highlighter-rouge">CP2105 Dual USB to UART Bridge Controller</code> and the <code class="language-plaintext highlighter-rouge">USB
Audio CODEC</code>.  If they are listed your computer can see the radio.  If not, try
pressing <code class="language-plaintext highlighter-rouge">menu</code> on the radio and confirm that option <code class="language-plaintext highlighter-rouge">037 CAT SELECT</code> is set to
<code class="language-plaintext highlighter-rouge">USB</code>.</p>

<p>Most of the radio’s default options are fine, but there are a few to adjust:</p>

<ul>
  <li>Set option <code class="language-plaintext highlighter-rouge">038 CAT RATE</code> to <code class="language-plaintext highlighter-rouge">38400</code> (default <code class="language-plaintext highlighter-rouge">4800</code>).</li>
  <li>Set option <code class="language-plaintext highlighter-rouge">075 DATA IN SELECT</code> to <code class="language-plaintext highlighter-rouge">USB</code> (default <code class="language-plaintext highlighter-rouge">DATA</code>)</li>
  <li>Set option <code class="language-plaintext highlighter-rouge">077 DATA OUT LEVEL</code> to <code class="language-plaintext highlighter-rouge">1</code> (default <code class="language-plaintext highlighter-rouge">50</code>)</li>
  <li>Set option <code class="language-plaintext highlighter-rouge">103 SSB MIC SEL</code> to <code class="language-plaintext highlighter-rouge">USB</code> (default <code class="language-plaintext highlighter-rouge">FRONT</code>).  Tip: Program your <code class="language-plaintext highlighter-rouge">C.S</code> key for this option so it’s easy to switch back to the front microphone.</li>
</ul>

<p>When using the radio for FT8 I also set these options:</p>

<ul>
  <li>Set <code class="language-plaintext highlighter-rouge">IPO</code> to <code class="language-plaintext highlighter-rouge">IPO</code></li>
  <li>Set <code class="language-plaintext highlighter-rouge">ATT</code> to <code class="language-plaintext highlighter-rouge">OFF</code></li>
  <li>Set <code class="language-plaintext highlighter-rouge">PROC</code> to <code class="language-plaintext highlighter-rouge">OFF</code> (this option is behind the <code class="language-plaintext highlighter-rouge">SCOPE</code> button)</li>
  <li>Set <code class="language-plaintext highlighter-rouge">MIC EQ</code> to <code class="language-plaintext highlighter-rouge">OFF</code> (also behind the <code class="language-plaintext highlighter-rouge">SCOPE</code> button)</li>
</ul>

<p>On OS X you’ll need to install <a href="https://wsjt.sourceforge.io/wsjtx.html">WSJT-X</a>.  WSJT-X can control the radio directly so no need for any other software radios.  These are my settings:</p>

<p><img src="/assets/img/2023-wsjt-x-settings.png" alt="A screenshot of the radio tab of the WSJT-X settings window." /></p>

<p>I have two serial ports provided by the radio, one regular and one “enhanced” -
only the enhanced one works.</p>]]></content><author><name>Wil Clouser</name></author><category term="radio" /><category term="walkthrough" /><summary type="html"><![CDATA[There are plenty of walkthroughs online about setting up FT8 on the DX-3000 with Windows but I didn’t find any for OS X. So, here we are. I’m using the USB interface.]]></summary></entry></feed>